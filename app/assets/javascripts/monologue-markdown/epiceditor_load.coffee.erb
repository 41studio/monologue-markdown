class MonologueMarkdown
  constructor: ->
    @textarea = $("#post_content")
    @opts =
      container: "epiceditor"
      basePath: ""
      clientSideStorage: false
      clientSideStorage: true
      parser: marked
      file:
        name: "epiceditor"
        defaultContent: ""
        autoSave: 100

      theme:
        base: "<%= asset_path("monologue-markdown/epiceditor/themes/base/epiceditor.css")%>"
        preview: "<%= asset_path("monologue-markdown/epiceditor/themes/preview/github.css")%>"
        editor: "<%= asset_path("monologue-markdown/epiceditor/themes/editor/epic-dark.css")%>"

      focusOnLoad: false
      shortcut:
        modifier: 18
        fullscreen: 70
        preview: 80
        edit: 79

    @initEpicEditor()
    @bindEvents()
    @removeDefaultEditor() # remove CKEDITOR right now if it is already loaded

  initEpicEditor: ->
    $(@textarea).after("<div id='epiceditor'></div>")
    $(@textarea).hide()
    @editor = new EpicEditor(@opts)
    @bindEpicEvents()
    @editor.load()

  bindEpicEvents: ->
    @editor.on "load", (data) =>
      @editor.importFile('epiceditor',$(@textarea).val())

    @editor.on "update", (data) =>
      @update_content(data)

  bindEvents: ->
    $("form").submit (e) =>
      @editor.emit("update")

    # removing CKEDITOR when loaded
    CKEDITOR.on 'instanceReady', =>
      @removeDefaultEditor()

  update_content: (data) =>
    # update content with our awesome markdown
    @textarea.val data.content

  removeDefaultEditor: =>
    try
      CKEDITOR.instances["post_content"].destroy(true)
      $(@textarea).hide()
    catch error
      #
    $('#cke_post_content').remove()


$(document).ready ->
  return if $("#is_markdown").html() == "false"
  new MonologueMarkdown()
